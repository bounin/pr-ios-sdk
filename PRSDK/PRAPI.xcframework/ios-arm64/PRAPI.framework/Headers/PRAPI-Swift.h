#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef PRAPI_SWIFT_H
#define PRAPI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import PRCatalogModel;
@import PRConfiguration;
@import PRDIContainer;
@import PRProtocols;
@import PRSmart;
@import PRSyntacticSugar;
@import PRThumbnail;
@import StoreKit;
@import UIKit;
#endif

#import <PRAPI/PRAPI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PRAPI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
enum ATTrackingStatus : NSUInteger;

SWIFT_CLASS("_TtC5PRAPI10ATTManager")
@interface ATTManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) enum ATTrackingStatus trackingAuthorizationStatus;)
+ (enum ATTrackingStatus)trackingAuthorizationStatus SWIFT_WARN_UNUSED_RESULT;
+ (void)requestTrackingAuthorizationWithCompletionHandler:(void (^ _Nonnull)(enum ATTrackingStatus))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSUInteger, ATTrackingStatus, open) {
  ATTrackingStatusNotDetermined = 0,
  ATTrackingStatusRestricted = 1,
  ATTrackingStatusDenied = 2,
  ATTrackingStatusAuthorized = 3,
};


SWIFT_PROTOCOL("_TtP5PRAPI17AnalyticsProvider_")
@protocol AnalyticsProvider
@end


SWIFT_PROTOCOL("_TtP5PRAPI24AccountAnalyticsProvider_")
@protocol AccountAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly) PRAnalyticsAccountView _Nonnull accountViewType;
@end

@class NSString;

/// An abstract class with common tracking code. Do not subclass this class directly, use <code>ScreenViewAnalytics</code>
/// or <code>EventAnalytics</code> instead.
SWIFT_CLASS("_TtC5PRAPI9Analytics")
@interface Analytics : NSObject <PRAnalytics>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
- (void)track:(PRAnalyticsTrackName _Nonnull)name parameters:(NSDictionary<PRAnalyticsTrackParameter, id> * _Nullable)parameters options:(PRAnalyticsTrackOptions)options;
- (void)trackGAPageView:(NSString * _Nonnull)pageURL;
- (void)trackGAEvent:(NSString * _Nonnull)category action:(NSString * _Nonnull)action label:(NSString * _Nullable)label value:(NSInteger)value;
- (void)trackGATimingWithCategory:(NSString * _Nonnull)category variable:(NSString * _Nonnull)variable timeSpent:(NSInteger)timeSpent;
- (void)tracker:(NSString * _Nonnull)trackerId pageView:(NSString * _Nonnull)pageUrl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP5PRAPI16AnalyticsTracker_")
@protocol AnalyticsTracker
@end


SWIFT_CLASS("_TtC5PRAPI23AnalyticsTrackerAdapter")
@interface AnalyticsTrackerAdapter : NSObject <PRAnalytics>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
- (void)track:(PRAnalyticsTrackName _Nonnull)name parameters:(NSDictionary<PRAnalyticsTrackParameter, id> * _Nullable)parameters options:(PRAnalyticsTrackOptions)options;
- (void)trackGAPageView:(NSString * _Nonnull)pageURL;
- (void)trackGAEvent:(NSString * _Nonnull)category action:(NSString * _Nonnull)action label:(NSString * _Nullable)label value:(NSInteger)value;
- (void)trackGATimingWithCategory:(NSString * _Nonnull)category variable:(NSString * _Nonnull)variable timeSpent:(NSInteger)timeSpent;
- (void)tracker:(NSString * _Nonnull)trackerId pageView:(NSString * _Nonnull)pageUrl;
- (nonnull instancetype)initWithTracker:(id <AnalyticsTracker> _Nonnull)tracker OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5PRAPI22AnalyticsValueProvider")
@interface AnalyticsValueProvider : NSObject
+ (NSString * _Nonnull)valueForMainMenuParameter:(PRAnalyticsMainMenu _Nonnull)parameter SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ASAuthorizationAppleIDCredential;

SWIFT_CLASS("_TtC5PRAPI18AppleSignInStorage")
@interface AppleSignInStorage : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ASAuthorizationAppleIDCredential * _Nullable storedCredential;)
+ (ASAuthorizationAppleIDCredential * _Nullable)storedCredential SWIFT_WARN_UNUSED_RESULT;
+ (void)saveCredentials:(ASAuthorizationAppleIDCredential * _Nonnull)credentials;
+ (void)removeStoredCredentials;
+ (void)validateStoredCredentials;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ArticleLink (SWIFT_EXTENSION(PRAPI))
- (void)updateWith:(NSDictionary<NSString *, id> * _Nonnull)info;
@end

typedef SWIFT_ENUM(NSInteger, ArticleTranslationState, open) {
  ArticleTranslationStateNone = 0,
  ArticleTranslationStateShortContent = 1,
  ArticleTranslationStateFull = 2,
};


SWIFT_CLASS("_TtC5PRAPI20AuthorizationManager")
@interface AuthorizationManager : NSObject
@property (nonatomic, readonly) BOOL isAuthorizationMandatory;
@property (nonatomic, readonly) BOOL shouldAskForAuthorization;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5PRAPI25AutoTranslateLanguagePair")
@interface AutoTranslateLanguagePair : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceISOCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull destinationISOCode;
@property (nonatomic, copy) NSString * _Nullable sourceLanguage;
@property (nonatomic, copy) NSString * _Nullable destinationLanguage;
@property (nonatomic, copy) NSString * _Nonnull title;
- (nonnull instancetype)initWithSourceISOLanguage:(NSString * _Nonnull)sourceISOLanguage destinationISOLanguage:(NSString * _Nonnull)destinationISOLanguage OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol TranslationLanguagesInfo;

SWIFT_CLASS("_TtC5PRAPI20BaseTranslateOptions")
@interface BaseTranslateOptions : NSObject
@property (nonatomic, readonly) BOOL isAvailable;
@property (nonatomic, copy) NSString * _Nullable lastSelectedLanguageISOCode;
- (nonnull instancetype)initWithLanguagesInfo:(id <TranslationLanguagesInfo> _Nonnull)languagesInfo OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isLanguageSupportedWithIsoCode:(NSString * _Nonnull)isoCode SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)translationLanguageISOCodesWithSourceLanguageISOCode:(NSString * _Nonnull)isoCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)languageNameWithIsoCode:(NSString * _Nonnull)isoCode SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)translationLanguageNamesWithSourceLanguageISOCode:(NSString * _Nonnull)sourceLanguageISOCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AutoTranslationZone;

SWIFT_CLASS("_TtC5PRAPI20AutoTranslateOptions")
@interface AutoTranslateOptions : BaseTranslateOptions
@property (nonatomic, copy) NSArray<AutoTranslateLanguagePair *> * _Nonnull languagePairs;
@property (nonatomic) BOOL hideSaveLanguagePairAlertView;
@property (nonatomic) BOOL isOff;
@property (nonatomic, readonly) BOOL isAvailable;
@property (nonatomic, readonly, strong) AutoTranslationZone * _Nonnull zones;
@property (nonatomic, readonly) NSInteger languagePairsLimit;
- (BOOL)isAvailableWithZone:(AutoTranslationZone * _Nonnull)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithLanguagesInfo:(id <TranslationLanguagesInfo> _Nonnull)languagesInfo OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP5PRAPI32AutoTranslationAnalyticsProvider_")
@protocol AutoTranslationAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly, copy) NSString * _Nonnull sourceLanguageISOCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull destinationLanguageISOCode;
@property (nonatomic, readonly) PRAnalyticsAutoTranslationZoneType _Nonnull translationZone;
@end


SWIFT_PROTOCOL("_TtP5PRAPI37AutoTranslationStateAnalyticsProvider_")
@protocol AutoTranslationStateAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly) BOOL isAutoTranslationOn;
@end


SWIFT_RESILIENT_CLASS("_TtC5PRAPI19AutoTranslationZone")
@interface AutoTranslationZone : _PROptionSet
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AutoTranslationZone * _Nonnull downloadedFeed;)
+ (AutoTranslationZone * _Nonnull)downloadedFeed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AutoTranslationZone * _Nonnull downloadedArticleDetails;)
+ (AutoTranslationZone * _Nonnull)downloadedArticleDetails SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AutoTranslationZone * _Nonnull feed;)
+ (AutoTranslationZone * _Nonnull)feed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AutoTranslationZone * _Nonnull articleDetails;)
+ (AutoTranslationZone * _Nonnull)articleDetails SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
@end


@interface AutoTranslationZone (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) PRAnalyticsAutoTranslationZoneType _Nonnull analyticsZone;
@end


SWIFT_PROTOCOL("_TtP5PRAPI23BEHomeAnalyticsProvider_")
@protocol BEHomeAnalyticsProvider <AnalyticsProvider>
@end



@interface Book (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isNew;
@end


@interface Book (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) PRSourceType sourceType;
@end


@class CatalogItemContentOption;

@interface Book (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL needsUpdatedDetails;
- (PRTitleItemExemplarState)downloadStateWithOptions:(CatalogItemContentOption * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS("_TtC5PRAPI14BookSubservice")
@interface BookSubservice : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5PRAPI18BookLicenseService")
@interface BookLicenseService : BookSubservice
@end


typedef SWIFT_ENUM(NSInteger, BookLicenseUpdateStatus, open) {
  BookLicenseUpdateStatusAdded = 0,
  BookLicenseUpdateStatusDeleted = 1,
};

@class GCDWebServer;
@class NSURL;
@class NSData;

SWIFT_CLASS("_TtC5PRAPI19BookResponseHandler")
@interface BookResponseHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setupHandlerFor:(GCDWebServer * _Nonnull)server;
- (NSString * _Nullable)addBookWithId:(NSString * _Nonnull)id baseFileUrl:(NSURL * _Nonnull)baseFileUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)addBookWithId:(NSString * _Nonnull)id resourceDataProvider:(NSData * _Nullable (^ _Nonnull)(NSString * _Nonnull))resourceDataProvider SWIFT_WARN_UNUSED_RESULT;
- (void)removeBookWithId:(NSString * _Nonnull)id;
@end


SWIFT_CLASS("_TtC5PRAPI14CatalogService")
@interface CatalogService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5PRAPI11BookService")
@interface BookService : CatalogService
@end





SWIFT_CLASS("_TtC5PRAPI15BookUserService")
@interface BookUserService : BookSubservice
@end







/// A base class for Braze-like analytics
SWIFT_CLASS("_TtC5PRAPI14EventAnalytics")
@interface EventAnalytics : Analytics
@end


SWIFT_CLASS("_TtC5PRAPI14BrazeAnalytics")
@interface BrazeAnalytics : EventAnalytics
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@end

@class NSBundle;

SWIFT_CLASS("_TtC5PRAPI25CatalogCoreDataController")
@interface CatalogCoreDataController : PRCoreDataController
@property (nonatomic, readonly, copy) NSString * _Nonnull managedObjectModelName;
@property (nonatomic, readonly, copy) NSString * _Nonnull databaseName;
@property (nonatomic, readonly, strong) NSBundle * _Nullable managedObjectModelBundle;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class Catalog;
@class PRPromise;

@interface CatalogItem (SWIFT_EXTENSION(PRAPI))
+ (PRPromise * _Nonnull)loadItemWithId:(NSString * _Nonnull)id catalog:(Catalog * _Nonnull)catalog SWIFT_WARN_UNUSED_RESULT;
@end


@interface CatalogItem (SWIFT_EXTENSION(PRAPI)) <OpenedItem>
@property (nonatomic, readonly) BOOL isNew;
- (void)markAsOpened;
@end


@interface CatalogItem (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isReadyToBuy;
@property (nonatomic, readonly) BOOL isBought;
@end

@class NSProgress;

@interface CatalogItem (SWIFT_EXTENSION(PRAPI))
- (PRTitleItemExemplarState)downloadStateWithOptions:(CatalogItemContentOption * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)downloadProgressWithOptions:(CatalogItemContentOption * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (NSProgress * _Nullable)downloadProgressObjectWithOptions:(CatalogItemContentOption * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end

@class NSDate;

@interface CatalogItem (SWIFT_EXTENSION(PRAPI)) <PRCatalogItem>
@property (nonatomic, readonly) PRSourceType sourceType;
@property (nonatomic, readonly, copy) NSString * _Nonnull CID;
@property (nonatomic, readonly, copy) NSDate * _Nullable date;
@property (nonatomic, readonly, copy) NSDate * _Nullable sortingDate;
@end

@protocol ReadingViewItem;

@interface CatalogItem (SWIFT_EXTENSION(PRAPI))
- (BOOL)isEqualToItem:(id <ReadingViewItem> _Nonnull)item SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isPurchaseAdvise;
@property (nonatomic) NSUInteger viewerPage;
@property (nonatomic, readonly) NSUInteger numberOfPages;
@property (nonatomic, readonly) NSUInteger pagesCount;
- (BOOL)done SWIFT_WARN_UNUSED_RESULT;
@end

@protocol HotSpotInfo;

SWIFT_PROTOCOL("_TtP5PRAPI19LibraryItemProtocol_")
@protocol LibraryItemProtocol <OpenedItem, PRCatalogItem>
@property (nonatomic, readonly, copy) NSDate * _Nullable orderDate;
@property (nonatomic, readonly) BOOL isDownloaded;
@property (nonatomic, readonly) BOOL isLocked;
@property (nonatomic, readonly) BOOL isMarkedToDeleteContent;
@property (nonatomic) BOOL isSelected;
@property (nonatomic, readonly, strong) id <HotSpotInfo> _Nullable hotSpotInfo;
@property (nonatomic, readonly) BOOL isRadioSupported;
- (void)lock:(BOOL)locked;
@end


@interface CatalogItem (SWIFT_EXTENSION(PRAPI)) <LibraryItemProtocol>
@property (nonatomic) BOOL isLocked;
@property (nonatomic) BOOL isMarkedToDeleteContent;
@property (nonatomic) BOOL isSelected;
@property (nonatomic, readonly, strong) id <HotSpotInfo> _Nullable hotSpotInfo;
@property (nonatomic, readonly) BOOL isDownloaded;
@property (nonatomic, readonly) BOOL isRadioSupported;
- (void)lock:(BOOL)locked;
@end



SWIFT_CLASS("_TtC5PRAPI26CatalogItemDownloadService")
@interface CatalogItemDownloadService : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CatalogItemDownloadService * _Nonnull shared;)
+ (CatalogItemDownloadService * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Cancel <code>item</code> content downloading
/// Operate in main queue context and saves it.
/// \param item <code>CatalogItem</code> to cancel downloading
///
- (void)cancelDownload:(CatalogItem * _Nonnull)item;
- (void)removeFromDownloads:(NSArray<CatalogItem *> * _Nonnull)items completionHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
@end








/// A base class for Firebase-like analytics
SWIFT_CLASS("_TtC5PRAPI19ScreenViewAnalytics")
@interface ScreenViewAnalytics : Analytics
@end


SWIFT_CLASS("_TtC5PRAPI19DictionaryAnalytics")
@interface DictionaryAnalytics : ScreenViewAnalytics
@end


SWIFT_CLASS("_TtC5PRAPI17ComScoreAnalytics")
@interface ComScoreAnalytics : DictionaryAnalytics
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@end




@interface DIContainer (SWIFT_EXTENSION(PRAPI))
- (void)removeAppDependencies;
- (void)registerAppDependencies;
@end



SWIFT_PROTOCOL("_TtP5PRAPI18DataSourceObserver_")
@protocol DataSourceObserver
@optional
- (void)startDataLoading:(id _Nonnull)source;
@required
- (void)completeDataLoading:(id _Nonnull)source;
@optional
- (void)dataSourceDidChange:(id _Nonnull)source;
@end

@class SPNode;

SWIFT_CLASS("_TtC5PRAPI16DeviceActivation")
@interface DeviceActivation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable userName;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientName;
@property (nonatomic, readonly, copy) NSDate * _Nonnull lastActivationDate;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createDate;
- (nullable instancetype)initWith:(SPNode * _Nonnull)node userName:(NSString * _Nullable)userName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface Document (SWIFT_EXTENSION(PRAPI))
/// return Promise which will provide Document instance
+ (PRPromise * _Nonnull)loadItemWithId:(NSString * _Nonnull)id catalog:(Catalog * _Nonnull)catalog SWIFT_WARN_UNUSED_RESULT;
@end


@interface Document (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) PRSourceType sourceType;
@end

@class PRSmartObject;

@interface Document (SWIFT_EXTENSION(PRAPI)) <PRSmartLayoutItem>
@property (nonatomic, readonly) BOOL isSmartDone;
@property (nonatomic, readonly) BOOL isSmartUpdated;
@property (nonatomic, readonly, strong) PRSmartObject * _Nullable smart;
@property (nonatomic, readonly, strong) PRSmartObject * _Nullable processedSmart;
- (void)processSmart;
@end

@class PRPage;
@class PDFDoc;
@class UIColor;
@class UIImage;

@interface Document (SWIFT_EXTENSION(PRAPI)) <ReadingViewItem>
- (BOOL)done SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pdnDone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pdnDownloadedForPage:(NSUInteger)pageNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)printingDisabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)pagePrintingDisabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)issuePrintingEnabled SWIFT_WARN_UNUSED_RESULT;
- (PRPage * _Nullable)getPage:(NSUInteger)pageNumber SWIFT_WARN_UNUSED_RESULT;
- (void)saveToPersistentStore;
- (NSString * _Nonnull)encryptionKey SWIFT_WARN_UNUSED_RESULT;
- (NSProgress * _Nullable)progress SWIFT_WARN_UNUSED_RESULT;
- (NSProgress * _Nullable)pdnProgress SWIFT_WARN_UNUSED_RESULT;
- (NSProgress * _Nullable)pdnProgressForPage:(NSUInteger)page SWIFT_WARN_UNUSED_RESULT;
- (void)recordIssuePrint;
- (void)recordPagePrint:(NSUInteger)numberOfPages;
- (PDFDoc * _Nullable)pdfDoc SWIFT_WARN_UNUSED_RESULT;
- (PDFDoc * _Nullable)pdfDocForPage:(NSUInteger)pageNo SWIFT_WARN_UNUSED_RESULT;
- (PDFDoc * _Nullable)pdfDocForPage:(NSUInteger)pageNo loadPdfIfNotAvailable:(BOOL)loadPdfIfNotAvailable error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)paperColor SWIFT_WARN_UNUSED_RESULT;
- (BOOL)printingAsBitmap SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)defaultImagePathForPage:(NSUInteger)page SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)imagePathForPage:(NSUInteger)page width:(CGFloat)width useDefaultIfNotExist:(BOOL)useDefault SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)imagePathForPage:(NSUInteger)page width:(CGFloat)width defaultIfNotExist:(BOOL * _Nonnull)pUseDefault SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fgImagePathForPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)imageFromPdfPage:(NSUInteger)pageNo pdfRect:(CGRect)pdfRect imageSize:(CGSize)imageSize contentScaleFactor:(CGFloat)contentScale error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end




SWIFT_CLASS("_TtC5PRAPI11EpubContent")
@interface EpubContent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC5PRAPI17FirebaseAnalytics")
@interface FirebaseAnalytics : ScreenViewAnalytics
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5PRAPI16MastheadProvider_")
@protocol MastheadProvider
@property (nonatomic, readonly) BOOL hasMasthead;
- (void)mastheadWithHeight:(CGFloat)height style:(UIUserInterfaceStyle)style handler:(PRThumbnailHandler _Nonnull)handler;
@end


SWIFT_PROTOCOL("_TtP5PRAPI7NTFItem_")
@protocol NTFItem <NSObject, MastheadProvider>
@end


SWIFT_PROTOCOL("_TtP5PRAPI15NTFActionConfig_")
@protocol NTFActionConfig
@property (nonatomic, readonly, copy) NSDictionary * _Nonnull generalActionConfig;
@property (nonatomic, readonly, copy) NSDictionary * _Nonnull articleActionConfig;
@end


SWIFT_PROTOCOL("_TtP5PRAPI11FlowArticle_")
@protocol FlowArticle <NTFActionConfig, NTFArticle, NTFItem>
@end


SWIFT_CLASS("_TtC5PRAPI15FlurryAnalytics")
@interface FlurryAnalytics : EventAnalytics
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5PRAPI11HotSpotInfo_")
@protocol HotSpotInfo
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable industry;
@end


@interface HotSpot (SWIFT_EXTENSION(PRAPI)) <HotSpotInfo>
@end

@class PRAccountItem;

@interface HotSpot (SWIFT_EXTENSION(PRAPI))
+ (BOOL)isActiveWithAccount:(PRAccountItem * _Nonnull)account SWIFT_WARN_UNUSED_RESULT;
@end









SWIFT_PROTOCOL("_TtP5PRAPI22IssueAnalyticsProvider_")
@protocol IssueAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly, copy) NSDate * _Nonnull issueDate;
@property (nonatomic, readonly) NSInteger page;
@end


SWIFT_CLASS("_TtC5PRAPI12KYMAnalytics")
@interface KYMAnalytics : NSObject <PRAnalytics>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
- (void)track:(PRAnalyticsTrackName _Nonnull)name parameters:(NSDictionary<PRAnalyticsTrackParameter, id> * _Nullable)parameters options:(PRAnalyticsTrackOptions)options;
- (void)trackGAPageView:(NSString * _Nonnull)pageURL;
- (void)trackGAEvent:(NSString * _Nonnull)category action:(NSString * _Nonnull)action label:(NSString * _Nullable)label value:(NSInteger)value;
- (void)trackGATimingWithCategory:(NSString * _Nonnull)category variable:(NSString * _Nonnull)variable timeSpent:(NSInteger)timeSpent;
- (void)tracker:(NSString * _Nonnull)trackerId pageView:(NSString * _Nonnull)pageUrl;
@end



/// Model for loading featured articles for playing in radio control.
/// The requirement is to use top news section from the user’s newsfeed as a data source.
/// The additional criteria are:
/// a) articles should have a cover image;
/// b) there should be 10 featured articles selected.
/// To achieve this we’re waiting for homefeed to get loaded first, in order to get top news section parameters.
/// Then we load items for this specific section into cache.
/// After that we apply the criteria to select featured articles and load their audio metadata.
SWIFT_CLASS("_TtC5PRAPI21ListenHighlightsModel")
@interface ListenHighlightsModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ListenHighlightsModel (SWIFT_EXTENSION(PRAPI)) <NSFetchedResultsControllerDelegate>
- (void)controllerDidChangeContent:(NSFetchedResultsController<id <NSFetchRequestResult>> * _Nonnull)controller;
@end



SWIFT_PROTOCOL("_TtP5PRAPI18LoadableDataSource_")
@protocol LoadableDataSource <NSObject>
@property (nonatomic, readonly) NSError * _Nullable loadingError;
@property (nonatomic, readonly) BOOL canLoadMore;
@property (nonatomic, readonly) BOOL isEmpty;
@property (nonatomic, readonly) BOOL isLoading;
@property (nonatomic, readonly) BOOL isFailed;
- (BOOL)load;
- (BOOL)loadMore;
- (void)addObserver:(id <DataSourceObserver> _Nonnull)observer;
- (void)removeObserver:(id <DataSourceObserver> _Nonnull)observer;
@end


@class NSManagedObjectContext;

@interface NSManagedObject (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull ntfContext;
@end


@interface NSManagedObject (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) PRCoreDataController * _Nullable coreDataController;
- (void)post:(NSNotificationName _Nonnull)notificationName userInfo:(NSDictionary * _Nullable)userInfo;
@end


@interface NSNotification (SWIFT_EXTENSION(PRAPI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull catalogPreloaded;)
+ (NSNotificationName _Nonnull)catalogPreloaded SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(PRAPI))
/// Notification’s userInfo contains book ids for which license was updated.
/// userInfo: [String: BookLicenseUpdateStatus]
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull bookLicensesUpdated;)
+ (NSNotificationName _Nonnull)bookLicensesUpdated SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(PRAPI))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadStarted;)
+ (NSNotificationName _Nonnull)libraryItemDownloadStarted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadCancelled;)
+ (NSNotificationName _Nonnull)libraryItemDownloadCancelled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadProgress;)
+ (NSNotificationName _Nonnull)libraryItemDownloadProgress SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadError;)
+ (NSNotificationName _Nonnull)libraryItemDownloadError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadFinished;)
+ (NSNotificationName _Nonnull)libraryItemDownloadFinished SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemOpened;)
+ (NSNotificationName _Nonnull)libraryItemOpened SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemLockChanged;)
+ (NSNotificationName _Nonnull)libraryItemLockChanged SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull libraryItemDownloadMenuError;)
+ (NSNotificationName _Nonnull)libraryItemDownloadMenuError SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSObject (SWIFT_EXTENSION(PRAPI))
- (void)observeLibraryNotificationsWithSelector:(SEL _Nonnull)selector object:(id <LibraryItemProtocol> _Nullable)object;
- (void)observeLibraryNotificationsWithSelector:(SEL _Nonnull)selector object:(id <LibraryItemProtocol> _Nullable)object observe:(BOOL)observe;
@end


SWIFT_UNAVAILABLE
@interface NSObject (SWIFT_EXTENSION(PRAPI))
- (void)_startServiceReachabilityObservation;
- (void)_stopServiceReachabilityObservation;
@end


@interface NTFAbstractArticle (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isTranslatable;
@end



@interface NTFArticleItem (SWIFT_EXTENSION(PRAPI)) <NTFItem>
@end

@class PublicationChannel;

@interface NTFArticleItem (SWIFT_EXTENSION(PRAPI))
- (PublicationChannel * _Nullable)channel SWIFT_WARN_UNUSED_RESULT;
@end


@interface NTFArticleItem (SWIFT_EXTENSION(PRAPI))
- (void)updateAccessibility;
@end


@interface NTFArticleItem (SWIFT_EXTENSION(PRAPI)) <MastheadProvider>
@property (nonatomic, readonly) BOOL hasMasthead;
- (void)mastheadWithHeight:(CGFloat)height style:(UIUserInterfaceStyle)style handler:(PRThumbnailHandler _Nonnull)handler;
@end


@interface NTFCollectionItem (SWIFT_EXTENSION(PRAPI))
+ (NTFCollectionItem * _Nullable)collectionWith:(NSDictionary<NSString *, id> * _Nonnull)info channelId:(NSString * _Nonnull)channelId forceUpdate:(BOOL)forceUpdate SWIFT_WARN_UNUSED_RESULT;
- (void)updateWith:(NSDictionary<NSString *, id> * _Nonnull)info;
@end


@interface NTFCoreDataController (SWIFT_EXTENSION(PRAPI))
- (void)processOnlineSessionHandlers;
@end


@interface NTFDataService (SWIFT_EXTENSION(PRAPI))
- (void)waitForOtherDataSuppliersWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end





@interface NTFPageSetItem (SWIFT_EXTENSION(PRAPI)) <NTFItem>
@property (nonatomic, readonly) BOOL hasMasthead;
- (void)mastheadWithHeight:(CGFloat)height style:(UIUserInterfaceStyle)style handler:(PRThumbnailHandler _Nonnull)handler;
@end

@class NSEntityDescription;

SWIFT_CLASS_NAMED("NTFPersonalizationItem")
@interface NTFPersonalizationItem : NTFFeedItem
@property (nonatomic, readonly) NTFDataItemType type;
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end








/// PDV stands for Publication Details View
SWIFT_PROTOCOL("_TtP5PRAPI20PDVAnalyticsProvider_")
@protocol PDVAnalyticsProvider <AnalyticsProvider>
@end


@interface PRAccountItem (SWIFT_EXTENSION(PRAPI))
- (void)showDeleteConfirmationAlert:(void (^ _Nonnull)(BOOL))completion;
@end

@class PRUserBundle;

@interface PRAccountItem (SWIFT_EXTENSION(PRAPI))
- (NSArray<PRUserBundle *> * _Nonnull)inferiorActiveBundlesWithProductId:(NSString * _Nonnull)productId SWIFT_WARN_UNUSED_RESULT;
@end


@interface PRAccountItem (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isInitialTrialSubscription;
@property (nonatomic, readonly) BOOL isInitialTrialSubscriptionExpired;
@property (nonatomic, readonly) BOOL isInitialTrialBundle;
@property (nonatomic, readonly, strong) PRUserBundle * _Nullable trialBundle;
@property (nonatomic, readonly) BOOL isTrialBundleActive;
@end



@interface PRAccountManager (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) AuthorizationManager * _Nonnull authorizationManager;
@end


@class UIApplication;

@interface PRAnalyticsService (SWIFT_EXTENSION(PRAPI))
+ (NSArray<id <PRAnalytics>> * _Nonnull)analyticsServicesWithApplication:(UIApplication * _Nullable)application launchOptions:(NSDictionary * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
@end


@interface PRBundle (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable realCIDs;
- (BOOL)containsCIDs:(NSSet<NSString *> * _Nonnull)cids SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_UNAVAILABLE
@interface PRCatalog (SWIFT_EXTENSION(PRAPI))
- (void)_finishLoading;
@end


@interface PRCatalog (SWIFT_EXTENSION(PRAPI))
- (PRPromise * _Nonnull)load SWIFT_WARN_UNUSED_RESULT;
@end


@interface PRCatalog (SWIFT_EXTENSION(PRAPI))
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT;
@end



@class PressCatalog;
@class Downloads;

@interface PRCatalog (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) CatalogCoreDataController * _Nonnull dataController;
- (void)updatePressCatalogForced:(BOOL)forced;
- (PressCatalog * _Nonnull)pressCatalogWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (Downloads * _Nonnull)downloadsWithContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end



@interface PRCollectionsModel<ObjectType> (SWIFT_EXTENSION(PRAPI))
- (NSArray<NTFCollectionItem *> * _Nullable)loadFromCache SWIFT_WARN_UNUSED_RESULT;
@end

@class Channel;

@interface PRCollectionsModel<ObjectType> (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) Channel * _Nullable channel;
@end


@interface PRDownloadedSourceList (SWIFT_EXTENSION(PRAPI))
- (void)startObservation;
@end


@interface PRModel (SWIFT_EXTENSION(PRAPI)) <Singleton>
+ (nonnull instancetype)instance SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)dismiss;
@end

@class PRSocialSignInManager;
@class PROnlineContentUpdater;
@class PRMyLibrary;
@class PRTitleItemsManager;
@class PRWebServer;
@class PRHotSpotManager;
@class PRSuggestionsManager;
@class PRAnalyticsProfileManager;
@class PRStoreKitManager;
@class PRPushNotificationsManager;
@class PROptions;
@class PRThumbnailsManager;
@class PRCoreUtil;
@class PRCoreGlobal;
@class PRHost;

@interface PRModel (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) PRAccountManager * _Nonnull accountManager;
@property (nonatomic, readonly, strong) PRSocialSignInManager * _Nonnull socialSignInManager;
@property (nonatomic, readonly, strong) PRAnalyticsService * _Nonnull analytics;
@property (nonatomic, readonly, strong) PROnlineContentUpdater * _Nonnull contentUpdater;
@property (nonatomic, readonly, strong) PRMyLibrary * _Nonnull mylib;
@property (nonatomic, readonly, strong) PRCatalog * _Nonnull catalog;
@property (nonatomic, readonly, strong) PRTitleItemsManager * _Nonnull titleItemsManager;
@property (nonatomic, readonly, strong) PRWebServer * _Nonnull httpServer;
@property (nonatomic, readonly, strong) PRHotSpotManager * _Nonnull hotSpotManager;
@property (nonatomic, readonly, strong) PRSuggestionsManager * _Nonnull suggestionsManager;
@property (nonatomic, readonly, strong) PRAnalyticsProfileManager * _Nonnull analyticsProfileManager;
@property (nonatomic, readonly, strong) PRStoreKitManager * _Nonnull storeKitManager;
@property (nonatomic, readonly, strong) PRPushNotificationsManager * _Nonnull pushNotificationsManager;
@property (nonatomic, readonly, strong) PROptions * _Nonnull options;
@property (nonatomic, readonly, strong) PRThumbnailsManager * _Nonnull thumbnailsManager;
@property (nonatomic, readonly, strong) PRCoreUtil * _Nonnull util;
@property (nonatomic, readonly, strong) PRCoreGlobal * _Nonnull glob;
@property (nonatomic, readonly, strong) PRHost * _Nonnull host;
@end



@interface PRMyLibrary (SWIFT_EXTENSION(PRAPI))
- (void)observeItems;
@end


@interface PRMyLibrary (SWIFT_EXTENSION(PRAPI))
- (NSArray<id <PRCatalogItem>> * _Nonnull)getCatalogItemsWithOrder:(PRCatalogSortingOrder)order SWIFT_WARN_UNUSED_RESULT;
@end


@interface PRMyLibrary (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, strong) Downloads * _Nonnull downloads;
@end



@interface PRMyLibraryItem (SWIFT_EXTENSION(PRAPI))
- (void)renewDownloadLicenseIfNeeded:(void (^ _Nullable)(BOOL))completion;
@end


@interface PRMyLibraryItem (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isExpired;
@end


@interface PRMyLibraryItem (SWIFT_EXTENSION(PRAPI)) <LibraryItemProtocol>
@property (nonatomic, readonly, strong) id <HotSpotInfo> _Nullable hotSpotInfo;
@property (nonatomic, readonly) BOOL isRadioSupported;
@end


@interface PROnboardingConfig (SWIFT_EXTENSION(PRAPI))
/// Onboarding is considered <code>active</code> when it’s either enabled or was completed
@property (nonatomic, readonly) BOOL isActive;
@end


@interface PROptions (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL booksAvailable;
- (BOOL)deleteDocumentsAndReturnError:(NSError * _Nullable * _Nullable)error;
@end


@interface PRServiceClient (SWIFT_EXTENSION(PRAPI))
- (id _Nullable)wrappedResponseWithJson:(id _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
@end


@interface PRSmartArticle (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) enum ArticleTranslationState translationState;
@end

@class PRTitleItemExemplar;

@interface PRSmartArticle (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isPreview;
@property (nonatomic, readonly) BOOL hasOnlineContent;
@property (nonatomic, readonly) BOOL hasDownloadedContent;
@property (nonatomic, readonly, strong) PRTitleItemExemplar * _Nullable titleExemplar;
@property (nonatomic, readonly, strong) PRMyLibraryItem * _Nullable mli;
- (BOOL)needsDataUpdateForLanguage:(NSString * _Nonnull)languageISO SWIFT_WARN_UNUSED_RESULT;
@end






@interface PRSourceItem (SWIFT_EXTENSION(PRAPI)) <MastheadProvider>
@property (nonatomic, readonly) BOOL hasMasthead;
- (void)mastheadWithHeight:(CGFloat)height style:(UIUserInterfaceStyle)style handler:(PRThumbnailHandler _Nonnull)handler;
@end


@interface PRSourceList (SWIFT_EXTENSION(PRAPI))
- (PRPromise * _Nonnull)wait SWIFT_WARN_UNUSED_RESULT;
@end



@interface PRSubscription (SWIFT_EXTENSION(PRAPI))
- (void)requestGoogleAdsConfig:(void (^ _Nonnull)(SPNode * _Nullable, NSError * _Nullable))completion;
@end


@interface PRSubscription (SWIFT_EXTENSION(PRAPI))
- (void)requestMastheadInfoWithCid:(NSString * _Nonnull)cid completion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completion;
@end



@interface PRSubscription (SWIFT_EXTENSION(PRAPI))
- (PRPromise * _Nonnull)getOnboardingStatus;
- (PRPromise * _Nonnull)updateOnboardingStatus:(PROnboardingStatus)status;
@end



@class PRThumbnailSource;

@interface PRTitleItemExemplar (SWIFT_EXTENSION(PRAPI))
- (PRThumbnailSource * _Nullable)thumbnailWithSize:(CGSize)size page:(NSInteger)page SWIFT_WARN_UNUSED_RESULT;
@end



@interface PRWebServer (SWIFT_EXTENSION(PRAPI)) <PRWebServerBookRegister>
- (NSURL * _Nullable)registerBookWithId:(NSString * _Nonnull)bookId bookFileDirURL:(NSURL * _Nonnull)bookFileDirURL SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Nullable)registerBookWithId:(NSString * _Nonnull)bookId resourceDataProvider:(BookResourceDataProviderBlock _Nonnull)dataProvider SWIFT_WARN_UNUSED_RESULT;
- (void)unregisterBookWithId:(NSString * _Nonnull)bookId;
@end





@interface PublicationChannel (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly) BOOL isFollowed;
@property (nonatomic, readonly, strong) id <MastheadProvider> _Nullable mastheadProvider;
@end


SWIFT_CLASS("_TtC5PRAPI24PublicationChannelsModel")
@interface PublicationChannelsModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5PRAPI18PublicationService")
@interface PublicationService : CatalogService
@end




SWIFT_PROTOCOL("_TtP5PRAPI22RadioAnalyticsProvider_")
@protocol RadioAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly, strong) PRMyLibraryItem * _Nullable libraryItem;
@property (nonatomic, readonly, strong) id <NTFArticle> _Nullable currentFeedArticle;
@end


SWIFT_PROTOCOL("_TtP5PRAPI26RichMediaAnalyticsProvider_")
@protocol RichMediaAnalyticsProvider <AnalyticsProvider>
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaType;
@property (nonatomic, readonly, strong) id <IssueAnalyticsProvider> _Nullable issue;
@end


@interface SKProduct (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) PRBundle * _Nullable prBundle;
@end



SWIFT_CLASS("_TtC5PRAPI17SearchHistoryItem")
@interface SearchHistoryItem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SearchHistoryItem (SWIFT_EXTENSION(PRAPI))
+ (void)getSearchHistoryWithPattern:(NSString * _Nonnull)pattern searchArea:(PRSmartSearchArea)searchArea rowsCount:(NSInteger)rowsCount completion:(void (^ _Nonnull)(NSArray<SearchHistoryItem *> * _Nullable, NSError * _Nullable))completion;
+ (void)clearSearchHistoryWithSearchArea:(PRSmartSearchArea)searchArea completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
+ (void)getSuggestionsWithPattern:(NSString * _Nonnull)pattern completion:(void (^ _Nonnull)(NSArray<SearchHistoryItem *> * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_PROTOCOL("_TtP5PRAPI19SectionalDataSource_")
@protocol SectionalDataSource <NSObject>
- (NSInteger)numberOfItemsIn:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSections SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)titleFor:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5PRAPI27ServiceReachabilityObserver_")
@protocol ServiceReachabilityObserver
- (void)serviceReachabilityDidChangeWithStatus:(PRAccountItemReachabilityStatus)status;
@end


SWIFT_CLASS("_TtC5PRAPI12SignInResult")
@interface SignInResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable userId;
@property (nonatomic, readonly, copy) NSString * _Nullable accessToken;
@property (nonatomic, readonly, copy) NSString * _Nullable identityToken;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
@property (nonatomic, readonly, copy) NSString * _Nullable profileImageUrl;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithUserId:(NSString * _Nullable)userId accessToken:(NSString * _Nullable)accessToken identityToken:(NSString * _Nullable)identityToken email:(NSString * _Nullable)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName displayName:(NSString * _Nullable)displayName profileImageUrl:(NSString * _Nullable)profileImageUrl error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP5PRAPI16SilentDataLoader_")
@protocol SilentDataLoader <NSObject>
@property (nonatomic, readonly) BOOL canLoadMoreSilently;
@end


SWIFT_PROTOCOL("_TtP5PRAPI29SplashScreenAnalyticsProvider_")
@protocol SplashScreenAnalyticsProvider <AnalyticsProvider>
@end


SWIFT_CLASS("_TtC5PRAPI8TextLink")
@interface TextLink : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nullable link;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text link:(NSString * _Nullable)link OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TextLink * _Nullable termsOfUse;)
+ (TextLink * _Nullable)termsOfUse SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TextLink * _Nullable privacyPolicy;)
+ (TextLink * _Nullable)privacyPolicy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<TextLink *> * _Nonnull policies;)
+ (NSArray<TextLink *> * _Nonnull)policies SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<TextLink *> * _Nonnull signInPolicies;)
+ (NSArray<TextLink *> * _Nonnull)signInPolicies SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PRTitleItem;

@interface TitleItem (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, strong) PRTitleItem * _Nullable titleItem;
@end


@interface TitleItem (SWIFT_EXTENSION(PRAPI))
@property (nonatomic, readonly, copy) NSDate * _Nullable sortingDate;
@end


SWIFT_CLASS("_TtC5PRAPI16TranslateOptions")
@interface TranslateOptions : BaseTranslateOptions
@property (nonatomic, readonly, strong) AutoTranslateOptions * _Nonnull autoTranslate;
@property (nonatomic, readonly) BOOL showTranslate;
@property (nonatomic, readonly) BOOL showAutoTranslateSettings;
- (nonnull instancetype)initWithLanguagesInfo:(id <TranslationLanguagesInfo> _Nonnull)languagesInfo OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP5PRAPI24TranslationLanguagesInfo_")
@protocol TranslationLanguagesInfo
@property (nonatomic, readonly) BOOL isTranslationEnabled;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable translationLanguages;
@end


SWIFT_CLASS("_TtC5PRAPI21TreasureDataAnalytics")
@interface TreasureDataAnalytics : DictionaryAnalytics
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIAlertController (SWIFT_EXTENSION(PRAPI))
@property (nonatomic) PRAlertControllerPresentationContext presentationContext;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(PRAPI)) <TranslationLanguagesInfo>
@property (nonatomic, readonly) BOOL isTranslationEnabled;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable translationLanguages;
@end

@class NTFSession;
@class Interest;

SWIFT_CLASS("_TtC5PRAPI24XCFCompatibilityResolver")
@interface XCFCompatibilityResolver : NSObject
+ (void)mergeUserInterests;
+ (Interest * _Nullable)interestWith:(NSDictionary<NSString *, id> * _Nonnull)json session:(NTFSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
